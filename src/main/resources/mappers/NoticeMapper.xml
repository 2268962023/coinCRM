<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.three.coinexchange.mapper.NoticeMapper" >
  <resultMap id="BaseResultMap" type="com.three.coinexchange.bean.Notice" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.three.coinexchange.bean.Notice" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, description, author, status, sort, last_update_time, created
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.three.coinexchange.bean.Notice" >
    insert into notice (id, title, description, 
      author, status, sort, 
      last_update_time, created, content
      )
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{created,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.three.coinexchange.bean.Notice" >
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.three.coinexchange.bean.Notice" >
    update notice
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.three.coinexchange.bean.Notice" >
    update notice
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.three.coinexchange.bean.Notice" >
    update notice
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="queryAllNotice" resultType="java.util.Map">
    select * from notice
    <where>
      <if test="title!=null and title!=''">
         title like concat('%',#{title},'%')
      </if>
    <if test="startTime!=null">
      and  cr.created>=#{startTime}
    </if>
    <if test="endTime!=null">
      and  <![CDATA[cr.last_update_time<= #{endTime}]]>
    </if>
    </where>
  </select>


</mapper>